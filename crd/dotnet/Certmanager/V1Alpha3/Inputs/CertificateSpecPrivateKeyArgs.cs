// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Certmanager.V1Alpha3
{

    /// <summary>
    /// Options to control private keys used for the Certificate.
    /// </summary>
    public class CertificateSpecPrivateKeyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.
        /// </summary>
        [Input("rotationPolicy")]
        public Input<string>? RotationPolicy { get; set; }

        public CertificateSpecPrivateKeyArgs()
        {
        }
    }
}
